plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.picpay.desafio.android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }
    sourceSets {
        getByName("test").java.srcDirs("src/test/kotlin")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }
    kotlinOptions {
        freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    room_version = "2.2.5"
    coroutines = "1.4.2"
    androidx_core = "1.3.2"
    material_version = "1.3.0"
    appcomapt_version = "1.1.0"
    constraintlayout_version = "2.0.0"
    gson_version = "2.8.5"
    retrofit_version = "2.9.0"
    logging_interceptor_version = "3.12.1"
    dagger_version = "2.40.5"
    lyifecyle_version = "2.4.0"
    design_version = "28.0.0"
    multidex_version = "2.0.1"
    androidx_test_version = "1.4.0"
    androidx_arch_test_version = "2.1.0"
    androidx_test_ext_version = "1.1.3"
    junit_version = "4.13.2"
    mockito_version = "1.12.2"
    expresso_version = "3.4.0"
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Retrofit
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version")

    //Dagger
    implementation("com.google.dagger:dagger:$dagger_version")
    implementation("com.google.dagger:dagger-android:$dagger_version")
    implementation("com.google.dagger:dagger-android-processor:$dagger_version")
    implementation("com.google.dagger:dagger-android-support:$dagger_version")
    kapt("com.google.dagger:dagger-compiler:$dagger_version")

    //Room
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    kapt("androidx.room:room-compiler:$room_version")


    //Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines")

    implementation("androidx.multidex:multidex:$multidex_version")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation("androidx.core:core-ktx:$androidx_core")
    implementation("androidx.appcompat:appcompat:$appcomapt_version")
    implementation("com.google.android.material:material:$material_version")
    implementation("com.android.support:design:$design_version")
    implementation("com.google.code.gson:gson:$gson_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lyifecyle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lyifecyle_version")
    implementation("androidx.constraintlayout:constraintlayout:$constraintlayout_version")
    implementation "de.hdodenhof:circleimageview:$circleimageview_version"
    implementation "com.squareup.picasso:picasso:$picasso_version"

    //Testing
    testImplementation("androidx.test:core:$androidx_test_version")
    testImplementation("androidx.test:runner:$androidx_test_version")
    testImplementation("junit:junit:$junit_version")
    testImplementation("androidx.arch.core:core-testing:$androidx_arch_test_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines")
    testImplementation("io.mockk:mockk:$mockito_version")
    testImplementation("junit:junit:$junit_version")
    androidTestImplementation("androidx.arch.core:core-testing:$androidx_arch_test_version")
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines")
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
